<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tn__cfg__dispatch_8h">
<title>core/tn_cfg_dispatch.h File Reference</title>
<indexterm><primary>core/tn_cfg_dispatch.h</primary></indexterm>
<section>
<title>Detailed Description</title>

<para>Dispatch configuration: set predefined options, include user-provided cfg file as well as default cfg file. </para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_tn__cfg__dispatch_8h_1a04321413cf21754a05682b298df0493d">TN_API_MAKE_ALIG_ARG__TYPE</link>   1</para>

<para>In this case, you should use macro like this: <computeroutput>#TN_MAKE_ALIG(struct my_struct)</computeroutput>. </para>
</listitem>
            <listitem><para>#define <link linkend="_tn__cfg__dispatch_8h_1a4972bf0cbc72e51a7463cf7d786d2b64">TN_API_MAKE_ALIG_ARG__SIZE</link>   2</para>

<para>In this case, you should use macro like this: <computeroutput>#TN_MAKE_ALIG(sizeof(struct my_struct))</computeroutput>. </para>
</listitem>
            <listitem><para><anchor xml:id="_tn__cfg__dispatch_8h_1afafafccc47ed18807179e8909ef18bee"/>#define <link linkend="_tn__cfg__dispatch_8h_1afafafccc47ed18807179e8909ef18bee">_TN_ON_CONTEXT_SWITCH_HANDLER</link>   1</para>

<para>Internal kernel definition: set to non-zero if <computeroutput>_tn_sys_on_context_switch()</computeroutput> should be called on context switch. </para>
</listitem>
            <listitem><para><anchor xml:id="_tn__cfg__dispatch_8h_1afc7c95c7b170768e91d7e771b346d8cb"/>#define <link linkend="_tn__cfg__dispatch_8h_1afc7c95c7b170768e91d7e771b346d8cb">_TN_STACK_OVERFLOW_SIZE_ADD</link>   (<link linkend="_tn__cfg__default_8h_1ac6a9bbac3b3b25d9b5bc8c21d2e09955">TN_STACK_OVERFLOW_CHECK</link> ? 1 : 0)</para>

<para>If <computeroutput>#TN_STACK_OVERFLOW_CHECK</computeroutput> is set, we have 1-word overhead for each task stack. </para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_tn__cfg__dispatch_8h_1a04321413cf21754a05682b298df0493d"/>    <section>
    <title>TN_API_MAKE_ALIG_ARG__TYPE</title>
<indexterm><primary>TN_API_MAKE_ALIG_ARG__TYPE</primary><secondary>tn_cfg_dispatch.h</secondary></indexterm>
<indexterm><primary>tn_cfg_dispatch.h</primary><secondary>TN_API_MAKE_ALIG_ARG__TYPE</secondary></indexterm>
<para><computeroutput>#define TN_API_MAKE_ALIG_ARG__TYPE   1</computeroutput></para><para>

<para>In this case, you should use macro like this: <computeroutput>#TN_MAKE_ALIG(struct my_struct)</computeroutput>. </para>
</para>

<para>This way is used in the majority of TNKernel ports. (actually, in all ports except the one by AlexB) </para>
<para>
Definition at line 56 of file tn_cfg_dispatch.h.</para>
    </section><anchor xml:id="_tn__cfg__dispatch_8h_1a4972bf0cbc72e51a7463cf7d786d2b64"/>    <section>
    <title>TN_API_MAKE_ALIG_ARG__SIZE</title>
<indexterm><primary>TN_API_MAKE_ALIG_ARG__SIZE</primary><secondary>tn_cfg_dispatch.h</secondary></indexterm>
<indexterm><primary>tn_cfg_dispatch.h</primary><secondary>TN_API_MAKE_ALIG_ARG__SIZE</secondary></indexterm>
<para><computeroutput>#define TN_API_MAKE_ALIG_ARG__SIZE   2</computeroutput></para><para>

<para>In this case, you should use macro like this: <computeroutput>#TN_MAKE_ALIG(sizeof(struct my_struct))</computeroutput>. </para>
</para>

<para>This way is stated in TNKernel docs and used in the port for dsPIC/PIC24/PIC32 by AlexB. </para>
<para>
Definition at line 63 of file tn_cfg_dispatch.h.</para>
</section>
</section>
</section>
