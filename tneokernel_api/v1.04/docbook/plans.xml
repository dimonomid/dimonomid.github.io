<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Plans</title>

<para>I have plans to implement some goodies not yet present in the kernel.</para>
<section xml:id="plans_1plans_event_connect">
<title>Event connecting</title>

<para>Sometimes we need to wait, say, for messages from several queues simultaneously; currently, the kernel does not have built-in support of it. How I plan to implement it: there should be a way to <emphasis>connect</emphasis> an event group and custom events mask to the data queue. Then, data queue will maintain flag(s) specified by mask: when queue is non-empty, it will set flag(s) by mask, when queue becomes empty, it will clear these flag(s).</para>

<para>Then, we can connect single event group to several queues passing different flags, and wait for the messages from all of these queues with just a single call to <computeroutput><link linkend="tn__eventgrp_8h_1aa905d986d188d4a0cc2f3974aad04896">tn_eventgrp_wait()</link></computeroutput>. When event happened, we just check which flags are set, and get message from appropriate queue. </para>
</section>

</chapter>
